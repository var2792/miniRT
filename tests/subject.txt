• Вы должны использовать miniLibX. Либо версия, доступная в операционной системе, либо из ее источников. Если вы решите работать с исходными текстами, вам нужно будет применить те же правила для вашей библиотеки libft, что и те, что написаны выше в части «Общие инструкции».
• Управление вашим окном должно оставаться плавным: переход на другое окно, сворачивание и т. Д.
• Вам понадобятся как минимум эти 5 простых геометрических объектов: плоскость, сфера, цилиндр, квадрат и треугольник.
• Если возможно, все возможные пересечения и внутренняя часть объекта должны быть обработаны правильно.
• Ваша программа должна иметь возможность изменять размер уникальных свойств объекта: диаметр сферы, размер стороны квадрата и ширину и высоту цилиндра.
• Ваша программа должна уметь применять преобразование перемещения и вращения к объектам, источникам света и камерам (кроме сфер, треугольников и источников света, которые нельзя повернуть).
• Управление освещением: точечная яркость, жесткие тени, окружающее освещение (объекты никогда не находятся полностью в темноте). С цветными и многоточечными светильниками необходимо обращаться правильно.
• На случай, если Глубокая мысль однажды увидит ваш проект, и если вы захотите создать красивые обои для рабочего стола ..
Ваша программа должна сохранять визуализированное изображение в формате BMP, если ее второй аргумент - «–-save».
• Если второй аргумент не указан, программа отображает изображение в окне и соблюдает следующие правила:
	◦ Нажатие ESC должно закрыть окно и полностью выйти из программы.
	◦ Щелчок по красному крестику на рамке окна должен закрыть окно и полностью выйти из программы.
	◦ Если заявленный размер сцены больше разрешения экрана, размер окна будет установлен в зависимости от текущего разрешения экрана.
	◦ Если имеется более одной камеры, вы должны иметь возможность переключаться между ними, нажимая клавиши клавиатуры по вашему выбору.
	◦ Настоятельно рекомендуется использовать изображения minilibX.
• Ваша программа должна принимать в качестве первого аргумента файл описания сцены с расширением .rt.
	◦ Он будет содержать размер окна / визуализированного изображения, что означает, что ваш miniRT должен иметь возможность отображать в любом положительном размере.
	◦ Каждый тип элемента может быть разделен одним или несколькими разрывами строки.
	◦ Каждый тип информации из элемента может быть разделен одним или несколькими пробелами.
	◦ Каждый тип элемента может быть установлен в любом порядке в файле.
	◦ Элементы, обозначенные заглавной буквой, могут быть объявлены в сцене только один раз.
	◦ Информация о каждом элементе - это сначала идентификатор типа (состоящий из одного или двух символов), за которым следует вся конкретная информация для каждого объекта в строгом порядке, например:

		Разрешение:
		R 1920 1080
		· Идентификатор: R
		· X размер рендеринга
		· Y размер рендеринга

		Окружающее освещение:
		А 0,2 255,255,255
		· Идентификатор: A
		· Коэффициент внешнего освещения в диапазоне [0.0,1.0]: 0.2
		· Цвета R, G, B в диапазоне [0-255]: 255, 255, 255

		Камера:
		c -50.0,0,20 0,0,1 70
		· Идентификатор: c
		· Координаты x, y, z точки обзора: 0.0,0.0,20.6
		· 3D нормализованный вектор ориентации. В диапазоне [-1,1] для каждой оси x, y, z:
		0.0,0.0,1.0
		· FOV: горизонтальное поле зрения в градусах в диапазоне [0,180]

		Свет:
		l -40.0,50.0,0.0 0.6 10,0,255
		· Идентификатор: l
		· Координаты x, y, z световой точки: 0.0,0.0,20.6
		· Коэффициент яркости света в диапазоне [0,0,1,0]: 0.6
		· Цвета R, G, B в диапазоне [0-255]: 10, 0, 255

		Сфера:
		sp 0.0,0.0,20.6 12.6 10,0,255
		· Идентификатор: sp
		· Координаты x, y, z центра сферы: 0.0,0.0,20.6
		· Диаметр сферы: 12.6
		· Цвета R, G, B в диапазоне [0-255]: 10, 0, 255

		Плоскость:
		pl 0.0,0.0,-10.0 0.0,1.0,0.0 0,0,225
		· Идентификатор: pl
		· Координаты x,y,z: 0.0,0.0,-10.0
		· 3D нормализованный вектор ориентации. В диапазоне [-1,1] для каждой оси x, y, z:
		0.0,0.0,1.0
		· Цвета R, G, B в диапазоне [0-255]: 0, 0, 255

		Квадрат:
		sq 0.0,0.0,20.6 1.0,0.0,0.0 12.6 255,0,255
		· Идентификатор: sq
		· Координаты x, y, z центра квадрата: 0.0,0.0,20.6
		· 3D нормализованный вектор ориентации. В диапазоне [-1,1] для каждой оси x, y, z:
		1.0,0.0,0.0
		· Размер стороны: 12.6
		· Цвета R, G, B в диапазоне [0-255]: 255, 0, 255

		Цилиндр:
		cy 50.0,0.0,20.6 0.0,0.0,1.0 10,0,255 14.2 21.42
		· Идентификатор: cy
		· Координаты x, y, z: 50.0,0.0,20.6
		· 3D нормализованный вектор ориентации. В диапазоне [-1,1] для каждой оси x, y, z:
		0.0,0.0,1.0
		· Диаметр цилиндра: 14.2
		· Высота цилиндра: 21.42
		· Цвета R, G, B в диапазоне [0,255]: 10, 0, 255

		Triangle:
		tr 10.0,20.0,10.0 10.0,10.0,20.0 20.0,10.0,10.0 0,0,255
		· Идентификатор: tr
		· Координаты x, y, z первой точки: 10.0,20.0,10.0
		· Координаты x, y, z второй точки: 10.0,10.0,20.0
		· Координаты x, y, z третьей точки: 20.0,10.0,10.0
		· Цвета R, G, B в диапазоне [0,255]: 0, 255, 255
